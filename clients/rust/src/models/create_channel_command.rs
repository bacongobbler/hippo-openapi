/*
 * Hippo.Web
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateChannelCommand {
    #[serde(rename = "appId", skip_serializing_if = "Option::is_none")]
    pub app_id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "domain", skip_serializing_if = "Option::is_none")]
    pub domain: Option<String>,
    #[serde(rename = "revisionSelectionStrategy", skip_serializing_if = "Option::is_none")]
    pub revision_selection_strategy: Option<crate::models::ChannelRevisionSelectionStrategy>,
    #[serde(rename = "rangeRule", skip_serializing_if = "Option::is_none")]
    pub range_rule: Option<String>,
    #[serde(rename = "activeRevisionId", skip_serializing_if = "Option::is_none")]
    pub active_revision_id: Option<String>,
    #[serde(rename = "certificateId", skip_serializing_if = "Option::is_none")]
    pub certificate_id: Option<String>,
}

impl CreateChannelCommand {
    pub fn new() -> CreateChannelCommand {
        CreateChannelCommand {
            app_id: None,
            name: None,
            domain: None,
            revision_selection_strategy: None,
            range_rule: None,
            active_revision_id: None,
            certificate_id: None,
        }
    }
}


