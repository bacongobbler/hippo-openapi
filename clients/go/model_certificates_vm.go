/*
Hippo.Web

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hippo-openapi

import (
	"encoding/json"
)

// CertificatesVm struct for CertificatesVm
type CertificatesVm struct {
	Certificates []CertificateDto `json:"certificates"`
}

// NewCertificatesVm instantiates a new CertificatesVm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificatesVm(certificates []CertificateDto) *CertificatesVm {
	this := CertificatesVm{}
	this.Certificates = certificates
	return &this
}

// NewCertificatesVmWithDefaults instantiates a new CertificatesVm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificatesVmWithDefaults() *CertificatesVm {
	this := CertificatesVm{}
	return &this
}

// GetCertificates returns the Certificates field value
func (o *CertificatesVm) GetCertificates() []CertificateDto {
	if o == nil {
		var ret []CertificateDto
		return ret
	}

	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value
// and a boolean to check if the value has been set.
func (o *CertificatesVm) GetCertificatesOk() ([]CertificateDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Certificates, true
}

// SetCertificates sets field value
func (o *CertificatesVm) SetCertificates(v []CertificateDto) {
	o.Certificates = v
}

func (o CertificatesVm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["certificates"] = o.Certificates
	}
	return json.Marshal(toSerialize)
}

type NullableCertificatesVm struct {
	value *CertificatesVm
	isSet bool
}

func (v NullableCertificatesVm) Get() *CertificatesVm {
	return v.value
}

func (v *NullableCertificatesVm) Set(val *CertificatesVm) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificatesVm) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificatesVm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificatesVm(val *CertificatesVm) *NullableCertificatesVm {
	return &NullableCertificatesVm{value: val, isSet: true}
}

func (v NullableCertificatesVm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificatesVm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


