/*
Hippo.Web

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hippo-openapi

import (
	"encoding/json"
)

// CreateAccountCommand struct for CreateAccountCommand
type CreateAccountCommand struct {
	UserName NullableString `json:"userName,omitempty"`
	Password NullableString `json:"password,omitempty"`
	PasswordConfirm NullableString `json:"passwordConfirm,omitempty"`
}

// NewCreateAccountCommand instantiates a new CreateAccountCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccountCommand() *CreateAccountCommand {
	this := CreateAccountCommand{}
	return &this
}

// NewCreateAccountCommandWithDefaults instantiates a new CreateAccountCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccountCommandWithDefaults() *CreateAccountCommand {
	this := CreateAccountCommand{}
	return &this
}

// GetUserName returns the UserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAccountCommand) GetUserName() string {
	if o == nil || o.UserName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAccountCommand) GetUserNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// HasUserName returns a boolean if a field has been set.
func (o *CreateAccountCommand) HasUserName() bool {
	if o != nil && o.UserName.IsSet() {
		return true
	}

	return false
}

// SetUserName gets a reference to the given NullableString and assigns it to the UserName field.
func (o *CreateAccountCommand) SetUserName(v string) {
	o.UserName.Set(&v)
}
// SetUserNameNil sets the value for UserName to be an explicit nil
func (o *CreateAccountCommand) SetUserNameNil() {
	o.UserName.Set(nil)
}

// UnsetUserName ensures that no value is present for UserName, not even an explicit nil
func (o *CreateAccountCommand) UnsetUserName() {
	o.UserName.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAccountCommand) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAccountCommand) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateAccountCommand) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *CreateAccountCommand) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *CreateAccountCommand) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *CreateAccountCommand) UnsetPassword() {
	o.Password.Unset()
}

// GetPasswordConfirm returns the PasswordConfirm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAccountCommand) GetPasswordConfirm() string {
	if o == nil || o.PasswordConfirm.Get() == nil {
		var ret string
		return ret
	}
	return *o.PasswordConfirm.Get()
}

// GetPasswordConfirmOk returns a tuple with the PasswordConfirm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAccountCommand) GetPasswordConfirmOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PasswordConfirm.Get(), o.PasswordConfirm.IsSet()
}

// HasPasswordConfirm returns a boolean if a field has been set.
func (o *CreateAccountCommand) HasPasswordConfirm() bool {
	if o != nil && o.PasswordConfirm.IsSet() {
		return true
	}

	return false
}

// SetPasswordConfirm gets a reference to the given NullableString and assigns it to the PasswordConfirm field.
func (o *CreateAccountCommand) SetPasswordConfirm(v string) {
	o.PasswordConfirm.Set(&v)
}
// SetPasswordConfirmNil sets the value for PasswordConfirm to be an explicit nil
func (o *CreateAccountCommand) SetPasswordConfirmNil() {
	o.PasswordConfirm.Set(nil)
}

// UnsetPasswordConfirm ensures that no value is present for PasswordConfirm, not even an explicit nil
func (o *CreateAccountCommand) UnsetPasswordConfirm() {
	o.PasswordConfirm.Unset()
}

func (o CreateAccountCommand) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserName.IsSet() {
		toSerialize["userName"] = o.UserName.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.PasswordConfirm.IsSet() {
		toSerialize["passwordConfirm"] = o.PasswordConfirm.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAccountCommand struct {
	value *CreateAccountCommand
	isSet bool
}

func (v NullableCreateAccountCommand) Get() *CreateAccountCommand {
	return v.value
}

func (v *NullableCreateAccountCommand) Set(val *CreateAccountCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccountCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccountCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccountCommand(val *CreateAccountCommand) *NullableCreateAccountCommand {
	return &NullableCreateAccountCommand{value: val, isSet: true}
}

func (v NullableCreateAccountCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccountCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


