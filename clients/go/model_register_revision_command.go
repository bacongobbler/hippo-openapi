/*
Hippo.Web

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hippo-openapi

import (
	"encoding/json"
)

// RegisterRevisionCommand struct for RegisterRevisionCommand
type RegisterRevisionCommand struct {
	AppStorageId NullableString `json:"appStorageId,omitempty"`
	RevisionNumber NullableString `json:"revisionNumber,omitempty"`
}

// NewRegisterRevisionCommand instantiates a new RegisterRevisionCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterRevisionCommand() *RegisterRevisionCommand {
	this := RegisterRevisionCommand{}
	return &this
}

// NewRegisterRevisionCommandWithDefaults instantiates a new RegisterRevisionCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterRevisionCommandWithDefaults() *RegisterRevisionCommand {
	this := RegisterRevisionCommand{}
	return &this
}

// GetAppStorageId returns the AppStorageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegisterRevisionCommand) GetAppStorageId() string {
	if o == nil || o.AppStorageId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AppStorageId.Get()
}

// GetAppStorageIdOk returns a tuple with the AppStorageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegisterRevisionCommand) GetAppStorageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AppStorageId.Get(), o.AppStorageId.IsSet()
}

// HasAppStorageId returns a boolean if a field has been set.
func (o *RegisterRevisionCommand) HasAppStorageId() bool {
	if o != nil && o.AppStorageId.IsSet() {
		return true
	}

	return false
}

// SetAppStorageId gets a reference to the given NullableString and assigns it to the AppStorageId field.
func (o *RegisterRevisionCommand) SetAppStorageId(v string) {
	o.AppStorageId.Set(&v)
}
// SetAppStorageIdNil sets the value for AppStorageId to be an explicit nil
func (o *RegisterRevisionCommand) SetAppStorageIdNil() {
	o.AppStorageId.Set(nil)
}

// UnsetAppStorageId ensures that no value is present for AppStorageId, not even an explicit nil
func (o *RegisterRevisionCommand) UnsetAppStorageId() {
	o.AppStorageId.Unset()
}

// GetRevisionNumber returns the RevisionNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RegisterRevisionCommand) GetRevisionNumber() string {
	if o == nil || o.RevisionNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.RevisionNumber.Get()
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegisterRevisionCommand) GetRevisionNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RevisionNumber.Get(), o.RevisionNumber.IsSet()
}

// HasRevisionNumber returns a boolean if a field has been set.
func (o *RegisterRevisionCommand) HasRevisionNumber() bool {
	if o != nil && o.RevisionNumber.IsSet() {
		return true
	}

	return false
}

// SetRevisionNumber gets a reference to the given NullableString and assigns it to the RevisionNumber field.
func (o *RegisterRevisionCommand) SetRevisionNumber(v string) {
	o.RevisionNumber.Set(&v)
}
// SetRevisionNumberNil sets the value for RevisionNumber to be an explicit nil
func (o *RegisterRevisionCommand) SetRevisionNumberNil() {
	o.RevisionNumber.Set(nil)
}

// UnsetRevisionNumber ensures that no value is present for RevisionNumber, not even an explicit nil
func (o *RegisterRevisionCommand) UnsetRevisionNumber() {
	o.RevisionNumber.Unset()
}

func (o RegisterRevisionCommand) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppStorageId.IsSet() {
		toSerialize["appStorageId"] = o.AppStorageId.Get()
	}
	if o.RevisionNumber.IsSet() {
		toSerialize["revisionNumber"] = o.RevisionNumber.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRegisterRevisionCommand struct {
	value *RegisterRevisionCommand
	isSet bool
}

func (v NullableRegisterRevisionCommand) Get() *RegisterRevisionCommand {
	return v.value
}

func (v *NullableRegisterRevisionCommand) Set(val *RegisterRevisionCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterRevisionCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterRevisionCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterRevisionCommand(val *RegisterRevisionCommand) *NullableRegisterRevisionCommand {
	return &NullableRegisterRevisionCommand{value: val, isSet: true}
}

func (v NullableRegisterRevisionCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterRevisionCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


