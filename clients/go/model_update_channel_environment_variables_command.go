/*
Hippo.Web

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hippo-openapi

import (
	"encoding/json"
)

// UpdateChannelEnvironmentVariablesCommand struct for UpdateChannelEnvironmentVariablesCommand
type UpdateChannelEnvironmentVariablesCommand struct {
	ChannelId *string `json:"channelId,omitempty"`
	EnvironmentVariables []UpdateEnvironmentVariableDto `json:"environmentVariables,omitempty"`
}

// NewUpdateChannelEnvironmentVariablesCommand instantiates a new UpdateChannelEnvironmentVariablesCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateChannelEnvironmentVariablesCommand() *UpdateChannelEnvironmentVariablesCommand {
	this := UpdateChannelEnvironmentVariablesCommand{}
	return &this
}

// NewUpdateChannelEnvironmentVariablesCommandWithDefaults instantiates a new UpdateChannelEnvironmentVariablesCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateChannelEnvironmentVariablesCommandWithDefaults() *UpdateChannelEnvironmentVariablesCommand {
	this := UpdateChannelEnvironmentVariablesCommand{}
	return &this
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *UpdateChannelEnvironmentVariablesCommand) GetChannelId() string {
	if o == nil || o.ChannelId == nil {
		var ret string
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateChannelEnvironmentVariablesCommand) GetChannelIdOk() (*string, bool) {
	if o == nil || o.ChannelId == nil {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *UpdateChannelEnvironmentVariablesCommand) HasChannelId() bool {
	if o != nil && o.ChannelId != nil {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given string and assigns it to the ChannelId field.
func (o *UpdateChannelEnvironmentVariablesCommand) SetChannelId(v string) {
	o.ChannelId = &v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateChannelEnvironmentVariablesCommand) GetEnvironmentVariables() []UpdateEnvironmentVariableDto {
	if o == nil {
		var ret []UpdateEnvironmentVariableDto
		return ret
	}
	return o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateChannelEnvironmentVariablesCommand) GetEnvironmentVariablesOk() ([]UpdateEnvironmentVariableDto, bool) {
	if o == nil || o.EnvironmentVariables == nil {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// HasEnvironmentVariables returns a boolean if a field has been set.
func (o *UpdateChannelEnvironmentVariablesCommand) HasEnvironmentVariables() bool {
	if o != nil && o.EnvironmentVariables != nil {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given []UpdateEnvironmentVariableDto and assigns it to the EnvironmentVariables field.
func (o *UpdateChannelEnvironmentVariablesCommand) SetEnvironmentVariables(v []UpdateEnvironmentVariableDto) {
	o.EnvironmentVariables = v
}

func (o UpdateChannelEnvironmentVariablesCommand) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChannelId != nil {
		toSerialize["channelId"] = o.ChannelId
	}
	if o.EnvironmentVariables != nil {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateChannelEnvironmentVariablesCommand struct {
	value *UpdateChannelEnvironmentVariablesCommand
	isSet bool
}

func (v NullableUpdateChannelEnvironmentVariablesCommand) Get() *UpdateChannelEnvironmentVariablesCommand {
	return v.value
}

func (v *NullableUpdateChannelEnvironmentVariablesCommand) Set(val *UpdateChannelEnvironmentVariablesCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateChannelEnvironmentVariablesCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateChannelEnvironmentVariablesCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateChannelEnvironmentVariablesCommand(val *UpdateChannelEnvironmentVariablesCommand) *NullableUpdateChannelEnvironmentVariablesCommand {
	return &NullableUpdateChannelEnvironmentVariablesCommand{value: val, isSet: true}
}

func (v NullableUpdateChannelEnvironmentVariablesCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateChannelEnvironmentVariablesCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


