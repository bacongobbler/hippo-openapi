/*
Hippo.Web

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hippo-openapi

import (
	"encoding/json"
)

// CreateEnvironmentVariableCommand struct for CreateEnvironmentVariableCommand
type CreateEnvironmentVariableCommand struct {
	Key string `json:"key"`
	Value string `json:"value"`
	ChannelId string `json:"channelId"`
}

// NewCreateEnvironmentVariableCommand instantiates a new CreateEnvironmentVariableCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEnvironmentVariableCommand(key string, value string, channelId string) *CreateEnvironmentVariableCommand {
	this := CreateEnvironmentVariableCommand{}
	this.Key = key
	this.Value = value
	this.ChannelId = channelId
	return &this
}

// NewCreateEnvironmentVariableCommandWithDefaults instantiates a new CreateEnvironmentVariableCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEnvironmentVariableCommandWithDefaults() *CreateEnvironmentVariableCommand {
	this := CreateEnvironmentVariableCommand{}
	return &this
}

// GetKey returns the Key field value
func (o *CreateEnvironmentVariableCommand) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CreateEnvironmentVariableCommand) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CreateEnvironmentVariableCommand) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *CreateEnvironmentVariableCommand) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CreateEnvironmentVariableCommand) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CreateEnvironmentVariableCommand) SetValue(v string) {
	o.Value = v
}

// GetChannelId returns the ChannelId field value
func (o *CreateEnvironmentVariableCommand) GetChannelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value
// and a boolean to check if the value has been set.
func (o *CreateEnvironmentVariableCommand) GetChannelIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ChannelId, true
}

// SetChannelId sets field value
func (o *CreateEnvironmentVariableCommand) SetChannelId(v string) {
	o.ChannelId = v
}

func (o CreateEnvironmentVariableCommand) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["channelId"] = o.ChannelId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateEnvironmentVariableCommand struct {
	value *CreateEnvironmentVariableCommand
	isSet bool
}

func (v NullableCreateEnvironmentVariableCommand) Get() *CreateEnvironmentVariableCommand {
	return v.value
}

func (v *NullableCreateEnvironmentVariableCommand) Set(val *CreateEnvironmentVariableCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEnvironmentVariableCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEnvironmentVariableCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEnvironmentVariableCommand(val *CreateEnvironmentVariableCommand) *NullableCreateEnvironmentVariableCommand {
	return &NullableCreateEnvironmentVariableCommand{value: val, isSet: true}
}

func (v NullableCreateEnvironmentVariableCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEnvironmentVariableCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


