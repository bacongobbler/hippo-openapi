/*
Hippo.Web

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hippo-openapi

import (
	"encoding/json"
	"time"
)

// Channel struct for Channel
type Channel struct {
	Created *time.Time `json:"created,omitempty"`
	CreatedBy NullableString `json:"createdBy,omitempty"`
	LastModified *time.Time `json:"lastModified,omitempty"`
	LastModifiedBy NullableString `json:"lastModifiedBy,omitempty"`
	Id *string `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Domain NullableString `json:"domain,omitempty"`
	RevisionSelectionStrategy *ChannelRevisionSelectionStrategy `json:"revisionSelectionStrategy,omitempty"`
	RangeRule NullableString `json:"rangeRule,omitempty"`
	ActiveRevisionId NullableString `json:"activeRevisionId,omitempty"`
	ActiveRevision *Revision `json:"activeRevision,omitempty"`
	CertificateId NullableString `json:"certificateId,omitempty"`
	Certificate *Certificate `json:"certificate,omitempty"`
	PortId *int32 `json:"portId,omitempty"`
	AppId *string `json:"appId,omitempty"`
	App *App `json:"app,omitempty"`
	EnvironmentVariables []EnvironmentVariable `json:"environmentVariables,omitempty"`
	DomainEvents []DomainEvent `json:"domainEvents,omitempty"`
}

// NewChannel instantiates a new Channel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannel() *Channel {
	this := Channel{}
	return &this
}

// NewChannelWithDefaults instantiates a new Channel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelWithDefaults() *Channel {
	this := Channel{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *Channel) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Channel) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *Channel) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetCreatedBy() string {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Channel) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *Channel) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *Channel) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *Channel) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *Channel) GetLastModified() time.Time {
	if o == nil || o.LastModified == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *Channel) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *Channel) SetLastModified(v time.Time) {
	o.LastModified = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetLastModifiedBy() string {
	if o == nil || o.LastModifiedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastModifiedBy.Get()
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetLastModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastModifiedBy.Get(), o.LastModifiedBy.IsSet()
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *Channel) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy.IsSet() {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given NullableString and assigns it to the LastModifiedBy field.
func (o *Channel) SetLastModifiedBy(v string) {
	o.LastModifiedBy.Set(&v)
}
// SetLastModifiedByNil sets the value for LastModifiedBy to be an explicit nil
func (o *Channel) SetLastModifiedByNil() {
	o.LastModifiedBy.Set(nil)
}

// UnsetLastModifiedBy ensures that no value is present for LastModifiedBy, not even an explicit nil
func (o *Channel) UnsetLastModifiedBy() {
	o.LastModifiedBy.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Channel) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Channel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Channel) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *Channel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *Channel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *Channel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *Channel) UnsetName() {
	o.Name.Unset()
}

// GetDomain returns the Domain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetDomain() string {
	if o == nil || o.Domain.Get() == nil {
		var ret string
		return ret
	}
	return *o.Domain.Get()
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Domain.Get(), o.Domain.IsSet()
}

// HasDomain returns a boolean if a field has been set.
func (o *Channel) HasDomain() bool {
	if o != nil && o.Domain.IsSet() {
		return true
	}

	return false
}

// SetDomain gets a reference to the given NullableString and assigns it to the Domain field.
func (o *Channel) SetDomain(v string) {
	o.Domain.Set(&v)
}
// SetDomainNil sets the value for Domain to be an explicit nil
func (o *Channel) SetDomainNil() {
	o.Domain.Set(nil)
}

// UnsetDomain ensures that no value is present for Domain, not even an explicit nil
func (o *Channel) UnsetDomain() {
	o.Domain.Unset()
}

// GetRevisionSelectionStrategy returns the RevisionSelectionStrategy field value if set, zero value otherwise.
func (o *Channel) GetRevisionSelectionStrategy() ChannelRevisionSelectionStrategy {
	if o == nil || o.RevisionSelectionStrategy == nil {
		var ret ChannelRevisionSelectionStrategy
		return ret
	}
	return *o.RevisionSelectionStrategy
}

// GetRevisionSelectionStrategyOk returns a tuple with the RevisionSelectionStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetRevisionSelectionStrategyOk() (*ChannelRevisionSelectionStrategy, bool) {
	if o == nil || o.RevisionSelectionStrategy == nil {
		return nil, false
	}
	return o.RevisionSelectionStrategy, true
}

// HasRevisionSelectionStrategy returns a boolean if a field has been set.
func (o *Channel) HasRevisionSelectionStrategy() bool {
	if o != nil && o.RevisionSelectionStrategy != nil {
		return true
	}

	return false
}

// SetRevisionSelectionStrategy gets a reference to the given ChannelRevisionSelectionStrategy and assigns it to the RevisionSelectionStrategy field.
func (o *Channel) SetRevisionSelectionStrategy(v ChannelRevisionSelectionStrategy) {
	o.RevisionSelectionStrategy = &v
}

// GetRangeRule returns the RangeRule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetRangeRule() string {
	if o == nil || o.RangeRule.Get() == nil {
		var ret string
		return ret
	}
	return *o.RangeRule.Get()
}

// GetRangeRuleOk returns a tuple with the RangeRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetRangeRuleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RangeRule.Get(), o.RangeRule.IsSet()
}

// HasRangeRule returns a boolean if a field has been set.
func (o *Channel) HasRangeRule() bool {
	if o != nil && o.RangeRule.IsSet() {
		return true
	}

	return false
}

// SetRangeRule gets a reference to the given NullableString and assigns it to the RangeRule field.
func (o *Channel) SetRangeRule(v string) {
	o.RangeRule.Set(&v)
}
// SetRangeRuleNil sets the value for RangeRule to be an explicit nil
func (o *Channel) SetRangeRuleNil() {
	o.RangeRule.Set(nil)
}

// UnsetRangeRule ensures that no value is present for RangeRule, not even an explicit nil
func (o *Channel) UnsetRangeRule() {
	o.RangeRule.Unset()
}

// GetActiveRevisionId returns the ActiveRevisionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetActiveRevisionId() string {
	if o == nil || o.ActiveRevisionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ActiveRevisionId.Get()
}

// GetActiveRevisionIdOk returns a tuple with the ActiveRevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetActiveRevisionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveRevisionId.Get(), o.ActiveRevisionId.IsSet()
}

// HasActiveRevisionId returns a boolean if a field has been set.
func (o *Channel) HasActiveRevisionId() bool {
	if o != nil && o.ActiveRevisionId.IsSet() {
		return true
	}

	return false
}

// SetActiveRevisionId gets a reference to the given NullableString and assigns it to the ActiveRevisionId field.
func (o *Channel) SetActiveRevisionId(v string) {
	o.ActiveRevisionId.Set(&v)
}
// SetActiveRevisionIdNil sets the value for ActiveRevisionId to be an explicit nil
func (o *Channel) SetActiveRevisionIdNil() {
	o.ActiveRevisionId.Set(nil)
}

// UnsetActiveRevisionId ensures that no value is present for ActiveRevisionId, not even an explicit nil
func (o *Channel) UnsetActiveRevisionId() {
	o.ActiveRevisionId.Unset()
}

// GetActiveRevision returns the ActiveRevision field value if set, zero value otherwise.
func (o *Channel) GetActiveRevision() Revision {
	if o == nil || o.ActiveRevision == nil {
		var ret Revision
		return ret
	}
	return *o.ActiveRevision
}

// GetActiveRevisionOk returns a tuple with the ActiveRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetActiveRevisionOk() (*Revision, bool) {
	if o == nil || o.ActiveRevision == nil {
		return nil, false
	}
	return o.ActiveRevision, true
}

// HasActiveRevision returns a boolean if a field has been set.
func (o *Channel) HasActiveRevision() bool {
	if o != nil && o.ActiveRevision != nil {
		return true
	}

	return false
}

// SetActiveRevision gets a reference to the given Revision and assigns it to the ActiveRevision field.
func (o *Channel) SetActiveRevision(v Revision) {
	o.ActiveRevision = &v
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetCertificateId() string {
	if o == nil || o.CertificateId.Get() == nil {
		var ret string
		return ret
	}
	return *o.CertificateId.Get()
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetCertificateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertificateId.Get(), o.CertificateId.IsSet()
}

// HasCertificateId returns a boolean if a field has been set.
func (o *Channel) HasCertificateId() bool {
	if o != nil && o.CertificateId.IsSet() {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given NullableString and assigns it to the CertificateId field.
func (o *Channel) SetCertificateId(v string) {
	o.CertificateId.Set(&v)
}
// SetCertificateIdNil sets the value for CertificateId to be an explicit nil
func (o *Channel) SetCertificateIdNil() {
	o.CertificateId.Set(nil)
}

// UnsetCertificateId ensures that no value is present for CertificateId, not even an explicit nil
func (o *Channel) UnsetCertificateId() {
	o.CertificateId.Unset()
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *Channel) GetCertificate() Certificate {
	if o == nil || o.Certificate == nil {
		var ret Certificate
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetCertificateOk() (*Certificate, bool) {
	if o == nil || o.Certificate == nil {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *Channel) HasCertificate() bool {
	if o != nil && o.Certificate != nil {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given Certificate and assigns it to the Certificate field.
func (o *Channel) SetCertificate(v Certificate) {
	o.Certificate = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *Channel) GetPortId() int32 {
	if o == nil || o.PortId == nil {
		var ret int32
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetPortIdOk() (*int32, bool) {
	if o == nil || o.PortId == nil {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *Channel) HasPortId() bool {
	if o != nil && o.PortId != nil {
		return true
	}

	return false
}

// SetPortId gets a reference to the given int32 and assigns it to the PortId field.
func (o *Channel) SetPortId(v int32) {
	o.PortId = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *Channel) GetAppId() string {
	if o == nil || o.AppId == nil {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetAppIdOk() (*string, bool) {
	if o == nil || o.AppId == nil {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *Channel) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *Channel) SetAppId(v string) {
	o.AppId = &v
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *Channel) GetApp() App {
	if o == nil || o.App == nil {
		var ret App
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetAppOk() (*App, bool) {
	if o == nil || o.App == nil {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *Channel) HasApp() bool {
	if o != nil && o.App != nil {
		return true
	}

	return false
}

// SetApp gets a reference to the given App and assigns it to the App field.
func (o *Channel) SetApp(v App) {
	o.App = &v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetEnvironmentVariables() []EnvironmentVariable {
	if o == nil {
		var ret []EnvironmentVariable
		return ret
	}
	return o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetEnvironmentVariablesOk() ([]EnvironmentVariable, bool) {
	if o == nil || o.EnvironmentVariables == nil {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// HasEnvironmentVariables returns a boolean if a field has been set.
func (o *Channel) HasEnvironmentVariables() bool {
	if o != nil && o.EnvironmentVariables != nil {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given []EnvironmentVariable and assigns it to the EnvironmentVariables field.
func (o *Channel) SetEnvironmentVariables(v []EnvironmentVariable) {
	o.EnvironmentVariables = v
}

// GetDomainEvents returns the DomainEvents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetDomainEvents() []DomainEvent {
	if o == nil {
		var ret []DomainEvent
		return ret
	}
	return o.DomainEvents
}

// GetDomainEventsOk returns a tuple with the DomainEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetDomainEventsOk() ([]DomainEvent, bool) {
	if o == nil || o.DomainEvents == nil {
		return nil, false
	}
	return o.DomainEvents, true
}

// HasDomainEvents returns a boolean if a field has been set.
func (o *Channel) HasDomainEvents() bool {
	if o != nil && o.DomainEvents != nil {
		return true
	}

	return false
}

// SetDomainEvents gets a reference to the given []DomainEvent and assigns it to the DomainEvents field.
func (o *Channel) SetDomainEvents(v []DomainEvent) {
	o.DomainEvents = v
}

func (o Channel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.LastModified != nil {
		toSerialize["lastModified"] = o.LastModified
	}
	if o.LastModifiedBy.IsSet() {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy.Get()
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Domain.IsSet() {
		toSerialize["domain"] = o.Domain.Get()
	}
	if o.RevisionSelectionStrategy != nil {
		toSerialize["revisionSelectionStrategy"] = o.RevisionSelectionStrategy
	}
	if o.RangeRule.IsSet() {
		toSerialize["rangeRule"] = o.RangeRule.Get()
	}
	if o.ActiveRevisionId.IsSet() {
		toSerialize["activeRevisionId"] = o.ActiveRevisionId.Get()
	}
	if o.ActiveRevision != nil {
		toSerialize["activeRevision"] = o.ActiveRevision
	}
	if o.CertificateId.IsSet() {
		toSerialize["certificateId"] = o.CertificateId.Get()
	}
	if o.Certificate != nil {
		toSerialize["certificate"] = o.Certificate
	}
	if o.PortId != nil {
		toSerialize["portId"] = o.PortId
	}
	if o.AppId != nil {
		toSerialize["appId"] = o.AppId
	}
	if o.App != nil {
		toSerialize["app"] = o.App
	}
	if o.EnvironmentVariables != nil {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}
	if o.DomainEvents != nil {
		toSerialize["domainEvents"] = o.DomainEvents
	}
	return json.Marshal(toSerialize)
}

type NullableChannel struct {
	value *Channel
	isSet bool
}

func (v NullableChannel) Get() *Channel {
	return v.value
}

func (v *NullableChannel) Set(val *Channel) {
	v.value = val
	v.isSet = true
}

func (v NullableChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannel(val *Channel) *NullableChannel {
	return &NullableChannel{value: val, isSet: true}
}

func (v NullableChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


