/*
Hippo.Web

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hippo-openapi

import (
	"encoding/json"
)

// CertificateItemPage struct for CertificateItemPage
type CertificateItemPage struct {
	Items []CertificateItem `json:"items"`
	TotalItems int32 `json:"totalItems"`
	PageIndex int32 `json:"pageIndex"`
	PageSize int32 `json:"pageSize"`
	IsLastPage bool `json:"isLastPage"`
}

// NewCertificateItemPage instantiates a new CertificateItemPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCertificateItemPage(items []CertificateItem, totalItems int32, pageIndex int32, pageSize int32, isLastPage bool) *CertificateItemPage {
	this := CertificateItemPage{}
	this.Items = items
	this.TotalItems = totalItems
	this.PageIndex = pageIndex
	this.PageSize = pageSize
	this.IsLastPage = isLastPage
	return &this
}

// NewCertificateItemPageWithDefaults instantiates a new CertificateItemPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCertificateItemPageWithDefaults() *CertificateItemPage {
	this := CertificateItemPage{}
	return &this
}

// GetItems returns the Items field value
func (o *CertificateItemPage) GetItems() []CertificateItem {
	if o == nil {
		var ret []CertificateItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CertificateItemPage) GetItemsOk() ([]CertificateItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *CertificateItemPage) SetItems(v []CertificateItem) {
	o.Items = v
}

// GetTotalItems returns the TotalItems field value
func (o *CertificateItemPage) GetTotalItems() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value
// and a boolean to check if the value has been set.
func (o *CertificateItemPage) GetTotalItemsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalItems, true
}

// SetTotalItems sets field value
func (o *CertificateItemPage) SetTotalItems(v int32) {
	o.TotalItems = v
}

// GetPageIndex returns the PageIndex field value
func (o *CertificateItemPage) GetPageIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageIndex
}

// GetPageIndexOk returns a tuple with the PageIndex field value
// and a boolean to check if the value has been set.
func (o *CertificateItemPage) GetPageIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageIndex, true
}

// SetPageIndex sets field value
func (o *CertificateItemPage) SetPageIndex(v int32) {
	o.PageIndex = v
}

// GetPageSize returns the PageSize field value
func (o *CertificateItemPage) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *CertificateItemPage) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *CertificateItemPage) SetPageSize(v int32) {
	o.PageSize = v
}

// GetIsLastPage returns the IsLastPage field value
func (o *CertificateItemPage) GetIsLastPage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsLastPage
}

// GetIsLastPageOk returns a tuple with the IsLastPage field value
// and a boolean to check if the value has been set.
func (o *CertificateItemPage) GetIsLastPageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsLastPage, true
}

// SetIsLastPage sets field value
func (o *CertificateItemPage) SetIsLastPage(v bool) {
	o.IsLastPage = v
}

func (o CertificateItemPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["totalItems"] = o.TotalItems
	}
	if true {
		toSerialize["pageIndex"] = o.PageIndex
	}
	if true {
		toSerialize["pageSize"] = o.PageSize
	}
	if true {
		toSerialize["isLastPage"] = o.IsLastPage
	}
	return json.Marshal(toSerialize)
}

type NullableCertificateItemPage struct {
	value *CertificateItemPage
	isSet bool
}

func (v NullableCertificateItemPage) Get() *CertificateItemPage {
	return v.value
}

func (v *NullableCertificateItemPage) Set(val *CertificateItemPage) {
	v.value = val
	v.isSet = true
}

func (v NullableCertificateItemPage) IsSet() bool {
	return v.isSet
}

func (v *NullableCertificateItemPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCertificateItemPage(val *CertificateItemPage) *NullableCertificateItemPage {
	return &NullableCertificateItemPage{value: val, isSet: true}
}

func (v NullableCertificateItemPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCertificateItemPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


