/**
 * Hippo.Web
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Channel from './Channel';
import DomainEvent from './DomainEvent';

/**
 * The Certificate model module.
 * @module model/Certificate
 * @version 1.0
 */
class Certificate {
    /**
     * Constructs a new <code>Certificate</code>.
     * @alias module:model/Certificate
     */
    constructor() { 
        
        Certificate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Certificate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Certificate} obj Optional instance to populate.
     * @return {module:model/Certificate} The populated <code>Certificate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Certificate();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('lastModified')) {
                obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'Date');
            }
            if (data.hasOwnProperty('lastModifiedBy')) {
                obj['lastModifiedBy'] = ApiClient.convertToType(data['lastModifiedBy'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('publicKey')) {
                obj['publicKey'] = ApiClient.convertToType(data['publicKey'], 'String');
            }
            if (data.hasOwnProperty('privateKey')) {
                obj['privateKey'] = ApiClient.convertToType(data['privateKey'], 'String');
            }
            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], [Channel]);
            }
            if (data.hasOwnProperty('domainEvents')) {
                obj['domainEvents'] = ApiClient.convertToType(data['domainEvents'], [DomainEvent]);
            }
        }
        return obj;
    }


}

/**
 * @member {Date} created
 */
Certificate.prototype['created'] = undefined;

/**
 * @member {String} createdBy
 */
Certificate.prototype['createdBy'] = undefined;

/**
 * @member {Date} lastModified
 */
Certificate.prototype['lastModified'] = undefined;

/**
 * @member {String} lastModifiedBy
 */
Certificate.prototype['lastModifiedBy'] = undefined;

/**
 * @member {String} id
 */
Certificate.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Certificate.prototype['name'] = undefined;

/**
 * @member {String} publicKey
 */
Certificate.prototype['publicKey'] = undefined;

/**
 * @member {String} privateKey
 */
Certificate.prototype['privateKey'] = undefined;

/**
 * @member {Array.<module:model/Channel>} channels
 */
Certificate.prototype['channels'] = undefined;

/**
 * @member {Array.<module:model/DomainEvent>} domainEvents
 */
Certificate.prototype['domainEvents'] = undefined;






export default Certificate;

