/**
 * Hippo.Web
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateEnvironmentVariableCommand from '../model/CreateEnvironmentVariableCommand';
import EnvironmentVariablesVm from '../model/EnvironmentVariablesVm';
import UpdateEnvironmentVariableCommand from '../model/UpdateEnvironmentVariableCommand';

/**
* EnvironmentVariable service.
* @module api/EnvironmentVariableApi
* @version 1.0
*/
export default class EnvironmentVariableApi {

    /**
    * Constructs a new EnvironmentVariableApi. 
    * @alias module:api/EnvironmentVariableApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiEnvironmentvariableExportGet operation.
     * @callback module:api/EnvironmentVariableApi~apiEnvironmentvariableExportGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/EnvironmentVariableApi~apiEnvironmentvariableExportGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiEnvironmentvariableExportGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/environmentvariable/export', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiEnvironmentvariableGet operation.
     * @callback module:api/EnvironmentVariableApi~apiEnvironmentvariableGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EnvironmentVariablesVm} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/EnvironmentVariableApi~apiEnvironmentvariableGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EnvironmentVariablesVm}
     */
    apiEnvironmentvariableGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = EnvironmentVariablesVm;
      return this.apiClient.callApi(
        '/api/environmentvariable', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiEnvironmentvariableIdDelete operation.
     * @callback module:api/EnvironmentVariableApi~apiEnvironmentvariableIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/EnvironmentVariableApi~apiEnvironmentvariableIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiEnvironmentvariableIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiEnvironmentvariableIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/environmentvariable/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiEnvironmentvariableIdPut operation.
     * @callback module:api/EnvironmentVariableApi~apiEnvironmentvariableIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateEnvironmentVariableCommand} opts.updateEnvironmentVariableCommand 
     * @param {module:api/EnvironmentVariableApi~apiEnvironmentvariableIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiEnvironmentvariableIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateEnvironmentVariableCommand'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiEnvironmentvariableIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/environmentvariable/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiEnvironmentvariablePost operation.
     * @callback module:api/EnvironmentVariableApi~apiEnvironmentvariablePostCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/CreateEnvironmentVariableCommand} opts.createEnvironmentVariableCommand 
     * @param {module:api/EnvironmentVariableApi~apiEnvironmentvariablePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    apiEnvironmentvariablePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['createEnvironmentVariableCommand'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/_*+json'];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/api/environmentvariable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
